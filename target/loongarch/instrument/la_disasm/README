使用接口:
void la_disasm_print(uint32_t insn, char *disasm_message);
该函数接收一条指令的二进制，会打印该指令的字符串表示。

IR2 la_disasm(uint32_t insn);
uint32_t la_assemble(IR2 *pir2);

void print_ir2(IR2 *pir2, char *disasm_message);

例子：在本目录下输入如下命令
gcc *.c test/main.c -I include -o my_test
./my_test

# 目录结构
disasm
  |- include
    |- assemble.h: LISA 操作数(类型、位域)格式声明
    |- ir2.h: ir2 结构体
  |- ir2.c: 用于打印一条IR2，包含一些指令和寄存器的字符串名字
  |- la_decode.c: 解析一条指令的类型 IR2_INS_OP
  |- la-disasm.c: 反汇编一条指令 insn -> ir2，打印
  |- la_assemble.c: 汇编一条指令 ir2 -> insn （指令和操作数的编码格式也在这里）


opnd_type包含两种：
- lisa_opnd_type：用于取出对应bit位上的数值
- ir2_opnd_type：用于解释数值的含义（寄存器，立即数，...）


